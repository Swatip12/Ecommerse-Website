# Development-specific Docker Compose configuration
version: '3.8'

services:
  # MySQL Database (same as production)
  mysql:
    image: mysql:8.0
    container_name: ecommerce-mysql-dev
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ecommerce
    ports:
      - "3306:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./database/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - ecommerce-dev-network
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache (same as production)
  redis:
    image: redis:7-alpine
    container_name: ecommerce-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - ecommerce-dev-network
    command: redis-server --appendonly yes

  # phpMyAdmin for database management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ecommerce-phpmyadmin-dev
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: rootpassword
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - ecommerce-dev-network

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ecommerce-redis-commander-dev
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      - redis
    networks:
      - ecommerce-dev-network

volumes:
  mysql_dev_data:
  redis_dev_data:

networks:
  ecommerce-dev-network:
    driver: bridge